{.$height[1] <- 60; .} %>>%
head(13) %>>%
dump_log(file = logfile, stop = T)
out <- women %>>%
start_log(log=cellwise$new(key = 'a_key')) %>>%
{.$height[1] <- 60; .} %>>%
head(13) %>>%
dump_log(file = logfile, stop = T)
logfile <- tempfile(filext = '.csv')
women$a_key <- seq_len(nrow(women))
logfile <- tempfile(fileext = '.csv')
women$a_key <- seq_len(nrow(women))
out <- women %>>%
start_log(log=cellwise$new(key = 'a_key')) %>>%
{.$height[1] <- 60; .} %>>%
head(13) %>>%
dump_log(file = logfile, stop = T)
read.csv(logfile)
women %>% head
{.$a_key[2] = 30
women %>%
{.$a_key[2] = 30}
women
women %>%
{.$a_key[2] = 30}
women
women %>%
{.$a_key[2] = 30; .}
women
install.packages('h20')
install.packages('h2o')
# Load the H2O library and start up the H2O cluster locally on your machine
library(h2o)
h2o.init(nthreads = -1, #Number of threads -1 means use all cores on your machine
max_mem_size = "8G")  #max mem size is the maximum memory to allocate to H2O
library(tidyverse)
read_tsv('Downloads/reed.tsv')
wos_direct <- read_tsv('Downloads/reed.tsv')
wos_direct$C1
apply(wos_direct, 2, head)
wos_direct$C1 %>%
split(';')
wos_direct$C1 %>%
str_split(';')
wos_direct$C1 %>%
str_split(';') %>%
enframe()
names(wos_direct)
wos_direct$UT
wos_direct %>%
select(UT, C1) %>%
mutate(C1 = str_split(C1, ';')) %>%
unnest
wos_direct %>%
select(UT, C1) %>%
mutate(C1 = C1 %>%
str_replace_all('\\[.+[^\\]]\\]') %>%
str_split(C1, ';')) %>%
unnest
wos_direct %>%
select(UT, C1) %>%
mutate(C1 = C1 %>%
str_replace_all('\\[.+[^\\]]\\]', '') %>%
str_split(C1, ';')) %>%
unnest
wos_direct %>%
select(UT, C1) %>%
mutate(C1 = C1 %>%
str_replace_all('\\[[^\\]+]\\]', '') %>%
str_split(C1, ';')) %>%
unnest
str_replace_all('hello world', 'o[^o]+o')
str_replace_all('hello world', 'o[^o]+o', '')
str_replace_all('hello [lsdkjf sl] world', '\\[[^\\]]\\]', '')
str_replace_all('hello [lsdkjf sl] world', '\\[[^\\]]+\\]', '')
wos_direct %>%
select(UT, C1) %>%
mutate(C1 = C1 %>%
str_replace_all('\\[[^\\]]+\\]', '') %>%
str_split(C1, ';')) %>%
unnest
wos_direct %>%
select(UT, C1) %>%
mutate(C1 = C1 %>%
str_replace_all('\\[[^\\]]+\\]', '')
%>%
str_split(C1, ';')) %>%
unnest
wos_direct %>%
select(UT, C1) %>%
mutate(C1 = C1 %>%
str_replace_all('\\[[^\\]]+\\]', '')
%>%
str_split(C1, ';')) %>%
unnest
wos_direct %>%
select(UT, C1) %>%
mutate(C1 = C1 %>%
str_replace_all('\\[[^\\]]+\\]', ''))
wos_direct %>%
select(UT, C1) %>%
mutate(C1 = C1 %>%
str_replace_all('\\[[^\\]]+\\]', '') %>%
str_split(C1, ';'))
wos_direct %>%
select(UT, C1) %>%
mutate(C1 = C1 %>%
str_replace_all('\\[[^\\]]+\\]', ''))
wos_direct %>%
select(UT, C1) %>%
mutate(C1 = C1 %>%
str_replace_all('\\[[^\\]]+\\]', '')) %>%
select(C1)
wos_direct %>%
select(UT, C1) %>%
mutate(C1 = C1 %>%
str_replace_all('\\[[^\\]]+\\]', '')) %>% select(C1) %>% .[1]
wos_direct %>%
select(UT, C1) %>%
mutate(C1 = C1 %>%
str_replace_all('\\[[^\\]]+\\]', '')) %>% select(C1) %>% .[[1]]
wos_direct %>%
select(UT, C1) %>%
mutate(C1 = C1 %>%
str_replace_all('\\[[^\\]]+\\]', '') %>%
str_split(';'))
wos_direct %>%
select(UT, C1) %>%
mutate(C1 = C1 %>%
str_replace_all('\\[[^\\]]+\\]', '') %>%
str_split(';')) %>%
unnest
wos_direct %>%
select(UT, C1) %>%
mutate(C1 = C1 %>%
str_replace_all('\\[[^\\]]+\\]', '') %>%
str_split(';') %>%
lapply(str_trim)) %>%
unnest
wos_direct %>%
select(UT, C1) %>%
mutate(C1 = C1 %>%
str_replace_all('\\[[^\\]]+\\]', '') %>%
str_split(';') %>%
lapply(str_trim) %>%
lapply(str_extract, '^[^,],')) %>%
unnest
str_extract('hello,world', '^[^,],'
)
str_extract('hello,world', '^[^\\,]\\,'
)
str_extract('hello,world', '^[^\\,]+\\,')
str_extract('hello,world', '^[^,]+,')
wos_direct %>%
select(UT, C1) %>%
mutate(C1 = C1 %>%
str_replace_all('\\[[^\\]]+\\]', '') %>%
str_split(';') %>%
lapply(str_trim) %>%
lapply(str_extract, '^[^,]+(?=,)')) %>%
unnest
wos_direct %>%
select(UT, C1) %>%
mutate(C1 = C1 %>%
str_replace_all('\\[[^\\]]+\\]', '') %>%
str_split(';') %>%
lapply(str_trim) %>%
lapply(str_extract, '^[^,]+(?=,)') %>%
lapply(str_to_upper)) %>%
unnest
wos_direct %>%
select(UT, C1) %>%
mutate(C1 = C1 %>%
str_replace_all('\\[[^\\]]+\\]', '') %>%
str_split(';') %>%
lapply(str_trim) %>%
lapply(str_extract, '^[^,]+(?=,)') %>%
lapply(str_to_upper)) %>%
unnest %>%
distinct() %>%
count(C1)
wos_direct %>%
select(UT, C1) %>%
mutate(C1 = C1 %>%
str_replace_all('\\[[^\\]]+\\]', '') %>%
str_split(';') %>%
lapply(str_trim) %>%
lapply(str_extract, '^[^,]+(?=,)') %>%
lapply(str_to_upper)) %>%
unnest %>%
distinct() %>%
count(C1, sort = T)
wos_direct %>%
select(UT, C1) %>%
mutate(C1 = C1 %>%
str_replace_all('\\[[^\\]]+\\]', '') %>%
str_split(';') %>%
lapply(str_trim) %>%
lapply(str_extract, '^[^,]+(?=,)') %>%
lapply(str_to_upper)) %>%
unnest %>%
distinct() %>%
count(C1, sort = T) %>%
head(20)
wos_direct %>%
filter(!is.na(C1))
wos_direct %>% filter(is.na(C1))
wos_direct %>%
select(UT, C1) %>%
mutate(C1 = C1 %>%
str_replace_all('\\[[^\\]]+\\]', '') %>%
str_split(';') %>%
lapply(str_trim) %>%
lapply(str_extract, '^[^,]+(?=,)') %>%
lapply(str_to_upper)) %>%
unnest %>%
# distinct() %>%
count(C1, sort = T) %>%
head(20)
source('~/.active-rstudio-document')
wosr_pull <- read_rds('Downloads/2018-05-10-13-37-12-wosr-data.rds')
wosr_org_count <- wosr_pull$address %>%
select(ut, org_pref)
wosr_org_count
wosr_org_count <- wosr_pull$address %>%
select(ut, org_pref) %>%
distinct () %>%
count(org_pref, sort = T)
wosr_org_count
org_count
wosr_org_count <- wosr_pull$address %>%
select(ut, org) %>%
distinct () %>%
count(org_pref, sort = T)
wosr_org_count <- wosr_pull$address %>%
select(ut, org) %>%
distinct () %>%
count(org, sort = T)
wosr_org_count
org_count
wosr_org_pref_count <- wosr_pull$address %>%
select(ut, org_pref) %>%
distinct() %>%
count(org_pref, sort = T)
list(
manual_pull = org_count,
wosr_org = wosr_org_count,
wosr_org_pref = wosr_org_pref_count
)
org_count
org_count %>% filter(str_detect(org_count, regex('cal', ignore_case = T)))
org_count %>% filter(str_detect(C1, regex('cal', ignore_case = T)))
wosr_org_count %>% filter(str_detect(org, regex('cal', ignore_case = T)))
wosr_org_pref_count %>% filter(str_detect(org_pref, regex('cal', ignore_case = T)))
list(
manual_pull = org_count,
wosr_org = wosr_org_count,
wosr_org_pref = wosr_org_pref_count
)
wosr_org_pref_count
wosr_org_pref_count %>% filter(str_detect(org_pref, regex('cal', ignore_case = T)))
wosr_org_pref_count %>% filter(str_detect(org_pref, regex('cali', ignore_case = T)))
??pcauchy
pca
?future
v <- {cat('resolving...\n'); 3.14}
v
library(future)
3.14
v %<-% {
cat('Resolving...\n');
3.14
}
v %<-% {
cat('Resolving...\n');
3.14
}
plan(multiprocess())
plan(multiprocess)
V %<-% {
cat('resolving...\n');
3.14
}
v
f <- future({
cat('resolving...\n')
3.14
})
v <- value(f)
v
caret
Harman74.cor
Harman74.cor$cov
Harman74.cor$cov %>% dim
library(tidyverse)
Harman74.cor$cov %>% dim
Harman74.cor$cov
principal
library(psych)
pc <- principal(Harman74.cor$cov, 4, rotate = 'varimax')
pc
pc[[1]]
pc$values
pc$communality
pc$r.scores
pc$rot.mat
pc$n.obs
pc %>% names()
pc
lapply(pc, head)
pc <- principal(Harman74.cor$cov,4,rotate="varimax")
pc$weights
?spread
pc$weights %>%
rownames()
pc$weights %>%
mutate(variable = rownames(.))
pc$weights %>%
as.data.frame()
pc$weights %>%
as.tibble %>%
mutate(variable = rownames(.))
pc$weights %>%
as.tibble %>%
mutate(variable = rownames)
pc$weights %>%
as.tibble(rownames = T) %>%
mutate(variable = rownames)
?as.tibble
pc$weights %>%
as.tibble(rownames = var)
pc$weights %>%
as_tibble(rownames = var)
pc$weights %>%
as_tibble(., rownames = var)
pc$weights %>%
as_tibble()
str(pc$weights)
summary(pc$weights)
pc$weights %>%
is.matrix()
pc$weights %>%
rownam
pc$weights %>%
rownames()
Harman74.cor
?Harman74.cor
pc$weights %>%
as_tibble()
pc$weights %>%
as_tibble(rownames = rn)
pc$weights %>%
as_tibble(rownames = 'rn')
pc$weights %>%
as_tibble(rownames = 'var')
pc$weights %>%
as_tibble(rownames = 'var') %>%
gather(component, weight, -var)
pca_attempt <- pc$weights %>%
as_tibble(rownames = 'var') %>%
gather(component, weight, -var)
ggplot(pca_attempt, aes(var, weight)) +
geom_col() +
facet_wrap(~component)
pca_attempt %>%
filter(component == 'RC1') %>%
top_n(wt = abs(weight))
pca_attempt %>%
filter(component == 'RC1') %>%
top_n(n = 10, wt = abs(weight))
pca_attempt %>%
filter(component == 'RC1') %>%
top_n(n = 10, wt = abs(weight)) %>%
reorder(var, weight)
pca_attempt %>%
filter(component == 'RC1') %>%
top_n(n = 10, wt = abs(weight)) %>%
arrange(desc(weight))
pca_attempt %>%
filter(component == 'RC1') %>%
top_n(n = 10, wt = abs(weight)) %>%
arrange(desc(weight)) %>%
ggplot(aes(var, weight)) +
geom_col()
pca_attempt %>%
filter(component == 'RC1') %>%
top_n(n = 10, wt = abs(weight)) %>%
arrange(desc(weight)) %>%
mutate(var = reorder(var, weight))
pca_attempt %>%
filter(component == 'RC1') %>%
top_n(n = 10, wt = abs(weight)) %>%
arrange(desc(weight)) %>%
mutate(var = reorder(var, weight)) %>%
ggplot(aes(var, weight)) +
geom_col()
pca_attempt %>%
filter(component == 'RC1') %>%
top_n(n = 10, wt = abs(weight)) %>%
arrange(desc(weight)) %>%
mutate(var = reorder(var, weight)) %>%
ggplot(aes(var, weight)) +
geom_col() +
coord_flip()
pca
?pca
pca_attempt %>%
group_by(component) %>%
nest()
pca_attempt %>%
group_by(component) %>%
nest() %>%
map(data = data %>%
top_n(n=10, wt = abs(weight)))
pca_attempt %>%
group_by(component) %>%
nest() %>%
map(data = data )
pca_attempt %>%
group_by(component) %>%
nest() %>%
mutate(data = map(data, top_n, n = 10, wt = abs(weight)))
pca_attempt %>%
group_by(component) %>%
nest() %>%
mutate(data = map(data, function(x){
x %>%
top_n(n = 10, weight = abs(weight)) %>%
arrange(desc(weight)) %>%
arrange(desc(weight)) %>%
mutate(var = reorder(var, weight)) %>%
}))
pca_attempt %>%
group_by(component) %>%
nest() %>%
mutate(data = map(data, function(x){
x %>%
top_n(n = 10, weight = abs(weight)) %>%
arrange(desc(weight)) %>%
arrange(desc(weight)) %>%
mutate(var = reorder(var, weight))
}))
pca_attempt %>%
group_by(component) %>%
nest() %>%
mutate(data = map(data, function(x){
x %>%
top_n(n = 10, wt = abs(weight)) %>%
arrange(desc(weight)) %>%
arrange(desc(weight)) %>%
mutate(var = reorder(var, weight))
}))
ggplot(pca_attempt$data[[2]], aes(var, weight)) +
geom_col() +
coord_flip()
top_10_pca <- pca_attempt %>%
group_by(component) %>%
nest() %>%
mutate(data = map(data, function(x){
x %>%
top_n(n = 10, wt = abs(weight)) %>%
arrange(desc(weight)) %>%
arrange(desc(weight)) %>%
mutate(var = reorder(var, weight))
}))
ggplot(top_10_pca$data[[2]], aes(var, weight)) +
geom_col() +
coord_flip()
ggplot(top_10_pca$data[[3]], aes(var, weight)) +
geom_col() +
coord_flip()
ggplot(top_10_pca$data[[4]], aes(var, weight)) +
geom_col() +
coord_flip()
?pc
?pca
?Harman74.cor
Harman74.cor
factanal(factors = 5, covat = Harman74.cor, rotatio = 'promaz')
factanal(factors = 5, covat = Harman74.cor, rotatio = 'promax')
factanal(factors = 5, covmat = Harman74.cor, rotatio = 'promax')
library(tidyverse)
'Graphs - structuring your data to facilitate the discovery of new insights into your company's databases' %>% str_split
'Graphs - structuring your data to facilitate the discovery of new insights into your company's databases' %>% str_c
"Graphs - structuring your data to facilitate the discovery of new insights into your company's databases" %>% str_split()
"Graphs - structuring your data to facilitate the discovery of new insights into your company's databases" %>% str_split('')
"Graphs - structuring your data to facilitate the discovery of new insights into your company's databases" %>% str_split(' ')
str_to_title('Graphs - structuring your organization’s data to facilitate the discovery of new insights
')
str_split('Graphs - Structuring Your Organization’s Data To Facilitate The Discovery Of New Insights')
str_split("Graphs - Structuring Your Organization’s Data To Facilitate The Discovery Of New Insights")
str_split("Graphs - Structuring Your Organization’s Data To Facilitate The Discovery Of New Insights", ' ')
str_split("A knowledge graph is a data structure in which all of an organization’s data is stored in a connected network of nodes and edges. This data structure encourages data exploration, facilitates the discovery of insights, and helps protect against the creation of interdepartamental information silos.", ' ')
dir()
setwd('traversing_graphs_in_R/')
library(pdftools)
pdf_file <- 'useR! Abstracts/user2017.pdf'
info <- pdf_info(pdf_file)
text <- pdf_text(pdf_file)
text[[1]]
text[[10]]
text[[10]] %>% cat
library(tidyverse)
text[[2]]
text[[2]] %>% cat
length(text)
text[[2]]
cat(text[[2]])
?cat
cat(text[[20]])
cat(text[[50]])
text[[50]]
